database:dipu;

1. regions:
     create table regions(region_id int primary key,region_name varchar(20));
     *insert:
        insert into regions values(1,'asia'),(2,'africa'),(3,'north america'),(4,'south america'),(5,'antarctica'),(6,'europe'),(7,'australia');
     
2.countries:
.   create table countries(country_id int primary key, country_name varchar(20),region_id int,foreign key(region_id) references regions(region_id));
   *insert:
   insert into countries values(1,'australia',7),(2,'india',1),(3,'singapor',1),(4,'us',3),(5,'canada',3),(6,'germany',6),(7,'uk',6),(8,'brazil',4);

3.locations:
     create table locations(location_id int primary key,street_address varchar(30),postal_code int,city varchar(20),state_province varchar(20), country_id int, foreign key(country_id) references countries(country_id));
     *insert:
         insert into locations values(1,'123 main Street',1001,'sydney','new south wales',1),(2,'234 abc udhna',120,'surat','gujarat',2),(3,'34 main way',440,'munich','bavaria',6),(4,'5A col main',321,'los angles','california',4),(5,'43 main daravi',445,'mumbai','maharashtra',2),(6,'2b block',555,'london','england',7),(7,'5t placed',78,'brooks','alberta',5);
 4.jobs:
      create table jobs(job_id int primary key,job_title varchar(20),min_salary int,max_salary int);
    *insert:
         insert into jobs values(1,'HR assistant',10000,17000),(2,'recruitment manager',7000,12000),(3,'account manager',10000,15000),(4,'directir of sales',12000,16000),(5,'accountant',8000,10000),(6,'adviser',7000,9000),(7,'purchase agent',8000,11000),(8,'content creation',7000,10000),(9,'social media',8000,12000);
    
    
 5.employees:
     create table employees(employee_id int primary key,first_name varchar(20),last_name varchar(20),email varchar(50),phone_number int,hire_date date,job_id int,foreign key(job_id) references jobs(job_id),salary int, commission_pct int,manager_id int,foreign key(manager_id) references employees (employee_id),department_id int);
   
       
       *insert:
         insert into employees values(1,'john','pie','john@gmail.com',123456789,'2001-08-01',4,16000,15,null,1),(2,'rock','max','ro@gmail.com',352618573,'2003-11-14',1,16000,12,1,1),(3,'tony','stark','ts@gmail.com',367285863,'2006-02-05',2,13000,2,1,1),(4,'peter','parkar','peter@gmail.com',645724864,'2004-12-27',4,16000,9,1,1),(5,'bruce','banner','bob@gmail.com',879462318,'2008-05-18',7,11000,null,1,1),(6,'black','panther','bl@gmail.com',987543784,'2010-01-25',8,10000,4,1,1),(7,'sam','wilson','sam@gmail.com',345217685,'2002-08-12',6,9000,10,2,3),(8,'jean','grey','jg@gmail.com',765893451,'2009-10-20',9,12000,6,3,5),(9,'scarlet','witch','sw@gmail.com',463895726,'2003-03-30',3,15000,null,5,2),(10,'doctor','strange','ds@gmail.com',678549865,'2000-02-13',2,12000,15,4,1),(11,'captain','america','ca@gmail.com',678654324,'2003-12-03',3,14000,8,2,5),(12,'iron','man','im@gmail.com',567873452,'2003-08-15',5,10000,null,null,2),(13,'black','window','bw@gmail.com',345672345,'2003-03-23',3,12000,null,12,1),(14,'hank','pym','hp@gmail.com',987656784,'2003-12-24',4,15000,17,null,3),(15,'luke','cage','ll@gmail.com',345627756,'2003-02-10',2,10000,null,5,5),(16,'wally','west','ww@gmail.com',456345765,'2003-04-15',1,17000,5,3,2),(17,'lois','lane','lo@gmail.com',234567654,'2003-08-09',6,9000,9,null,1),(18,'billy','batson','bs@gmail.com',789345768,'2003-11-25',8,9000,11,null,4),(19,'hal','jordan','hj@gmail.com',678347654,'2003-05-19',3,14000,null,14,2)(20,'jhnny','depp','jd@gmail.com',678453421,'2020-08-03',1,17000,10,null,1),(21,'tom','cruise','tc@gmail.com',567893245,'2021-08-17',4,15000,5,12,1),(22,'brad','pitt','pi@gmail.com',789065430,'2022-08-20',7,11000,3,8,1),(23,'will','smith','ws@gmail.com',780314802,'2023-08-03',5,10000,11,15,1),(24,'hal','jordan','hj@gmail.com',678347654,'2003-05-19',3,14000,null,1,2);
 
   -> alter table employees add constraint foreign key(department_id) references departments(department_id);
     
 6.departments:
      create table departments(department_id int primary key, department_name varchar (30),manager_id int,foreign key(manager_id)references employees (employee_id),location_id int, foreign key (location_id) references locations(location_id));
      *insert:
          insert into departments values(1,'HR',4,1),(2,'sales',2,2),(3,'finance',1,5),(4,'purchase',6,6),(5,'marketing',3,4);
      
  7.job_history:
      create table job_history(employee_id int,foreign key (employee_id)references employees(employee_id),start_date date,end_date date,job_id int, foreign key (job_id)references jobs(job_id),department_id int, foreign key (department_id)references departments(department_id));
      *insert:
       insert into job_history values(2,'2000-03-12','2000-06-12',1,1),(5,'2003-08-20','2005-11-15',7,1),(7,'1998-11-05','2001-05-07',6,3),(4,'2001-02-17','2003-07-13',4,1),(10,'1997-01-25','1999-06-03',2,1),(2,'2001-01-05',null,2,2),(4,'2004-05-12',null,5,1),(5,'2006-12-06',null,6,4),(7,'2003-11-08',null,5,1),(10,'2000-05-10',null,1,2),(4,'2003-08-01','2003-12-30',3,2);
        
      alter table job_history add constraint primary key(employee_id,start_date);
     
      
  *querys:
  
 done. 15.
select job_title,avg(salary) from employees join jobs group by job_title;

done.5. select job_id,avg(salary) as 'average salary' from employees group by job_id having avg(salary)>10000;

done.2. select country_id,count(*) as 'cities' from locations group by country_id;

done.1.select*from employees where day(hire_date)>'15';


done.3. select department_id,avg(salary) as 'average salary' from employees where commission_pct is not null group by department_id;

done.4. select job_id,count(employee_id) as 'number of employees',sum(salary) as 'sum of salary',max(salary)-min(salary) as 'differwnce of salary' from employees;


done.6.select year(hire_date) from employees group by year(hire_date) having count(employee_id)>10;


done.7.select department_name from departments d join employees e on e.department_id=d.department_id where commission_pct is not null group by department_name having count(employee_id)>5;


done.10.select department_id,year(hire_date) as 'year',count(employee_id) as 'number of employees' from employees group by year(hire_date) order by department_id;


done.11.select department_name from departments d join employees e on d.department_id=e.department_id where e.manager_id is not null group by department_name having count(employee_id)>5;

done.12.select department_name, first_name as 'manager name',city from departments d join employees e on d.manager_id=e.manager_id join locations l on l.location_id=d.location_id;


done.13.select country_name,city, department_name from countries c join locations l on c.country_id=l.country_id join departments d on d.location_id=l.location_id;
  
 
 done.14. select job_title, department_name,last_name from jobs j join employees e on j.job_id=e.job_id join departments d on d.department_id=e.department_id where year(hire_date) between '2000' and '2005';
 
 
done.16. select * from jobs where job_id in (select job_id from employees where salary>15000);

done.20. select month(hire_date) from employees e join departments d on e.department_id=d.department_id join locations l on l.location_id=d.location_id where city='sydney' group by month(hire_date) having count(employee_id)>5;


done.22.select * from jobs where job_id in(select job_id from employees where year(current_date)=year(hire_date)); 


done.17. select department_name,first_name as 'manager name',salary from departments d join employees e on d.manager_id=e.manager_id where (current_date()-hire_date)/365>5;


done.19.SELECT department_name, AVG(salary),commission_pct,COUNT(employee_id) as 'number of employees' FROM departments d JOIN employees e on d.department_id=e.department_id GROUP BY department_name;


done.29.select salary from employees group by salary order by salary desc limit 2,1;


done.26.select*from employees where employee_id in (select manager_id from employees group by manager_id having count(employee_id)>5);


done.8.select employee_id from employees where employee_id in(select employee_id from job_history);


done.23.select*from employees where employee_id not in (select employee_id from job_history);


done.24.select job_title,avg(salary) as'average salary' from jobs j join employees e on j.job_id=e.job_id where employee_id in(select employee_id from job_history);


  done 25. select country_name,city,count(department_id) as 'number of department' from countries c join locations l on c.country_id=l.country_id join departments d on d.location_id=l.location_id where department_id in(select department_id from employees group by department_id having count(employee_id)>5) group by country_name,city;
  
  
   
  done.27.select department_name ,count(employee_id) as 'number of employees' from departments d join employees e on d.department_id=e.department_id where (current_date-hire_date)/365<2;
   
   
   
   done.28. select * from departments where department_id in(select department_id from employees where employee_id in(select employee_id from job_history) group by department_id having max(salary)>10000);
  
   done.21.select*from departments where department_id in(select department_id from employees where job_id in(select job_id from jobs where max_salary>10000) group by department_id);
   
   
   done.18. select first_name,job_title from employees e join jobs j on e.job_id=j.job_id join job_history a on a.job_id =j.job_id where month(end_date-start_date)<6;
   
   
   done.9. 
   select job_id from employees where job_id in(select job_id from job_history where (end_date-start_date)>100) group by job_id having count(employee_id)>3;
   
   